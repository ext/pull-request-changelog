name: Pull Requst Changelog
author: David Sveningsson
description: |
  Generate changelog from conventional changelog for using in a pull request comment.

branding:
  icon: git-pull-request
  color: blue

inputs:
  preset:
    description: full name of an NPM package with a conventional changelog preset
    required: false
  config:
    description: path to a configuration file exporting a configuration
    required: false
  template-dir:
    description: directory with templates
    required: false
  filename:
    description: name of temporary file generated by script
    required: false
    default: pr-changelog.md
  comment:
    description: If `true` a sticky comment will be added with the changelog.
    required: false
    default: true
  comment-id:
    description: id passed to sticky-pull-request-commend
    required: false
    default: pull-request-changelog
  fetch-depth:
    description: git commit depth
    default: 100
  version:
    description: NPM script version (passed to npx)
    default: 1.1.3

outputs:
  message:
    description: Changelog message
    value: ${{ steps.generate.outputs.message }}

runs:
  using: composite
  steps:
    - name: fetch git history
      id: history
      shell: bash
      run: |
        git fetch --depth ${{ inputs.fetch-depth }} origin ${{ github.event.pull_request.base.ref }}
        git fetch --depth ${{ inputs.fetch-depth }} origin ${{ github.head_ref }}
    - name: generate changelog comment
      id: generate
      shell: bash
      run: |
        npx -y pull-request-changelog@${{ inputs.version }} \
          -from origin/${{ github.event.pull_request.base.ref }} --to origin/${{ github.head_ref }} \
          --template-dir "${{ inputs.template-dir }}" \
          --output "${{ inputs.filename }}"
        cat ${{ inputs.filename }}
        echo "message=$(cat ${{ inputs.filename }})" >> $GITHUB_OUTPUT
    - name: sticky pull request comment
      id: comment
      uses: marocchino/sticky-pull-request-comment@v2
      if: inputs.comment == true
      with:
        header: ${{ inputs.message-id }}
        path: ${{ inputs.filename }}
