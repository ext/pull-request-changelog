name: Pull Requst Changelog
author: David Sveningsson
description: |
  Generate changelog from conventional changelog for using in a pull request comment.

branding:
  icon: git-pull-request
  color: blue

inputs:
  preset:
    description: full name of an NPM package with a conventional changelog preset
    required: false
  config:
    description: path to a configuration file exporting a configuration
    required: false
  template-dir:
    description: directory with templates
    required: false
  filename:
    description: name of temporary file generated by script
    required: false
    default: pr-changelog.md
  comment:
    description: If `true` a sticky comment will be added with the changelog.
    required: false
    default: true
  comment-id:
    description: id passed to sticky-pull-request-commend
    required: false
    default: pull-request-changelog
  fetch-depth:
    description: git commit depth
    default: 100
  version:
    description: NPM script version (passed to npx). Default is to use same script version as action version.
    default: 1.3.0

outputs:
  message:
    description: Changelog message
    value: ${{ steps.generate.outputs.message }}

runs:
  using: composite
  steps:
    - name: fetch git history
      id: history
      shell: bash
      run: |
        git fetch --depth ${{ inputs.fetch-depth }} origin \
          ${{ github.event.pull_request.base.ref }} \
          ${{ github.head_ref }}
    - name: determine merge info
      id: merge-info
      shell: bash
      run: |
        echo "base=$(git merge-base origin/${{ github.head_ref }} origin/${{ github.event.pull_request.base.ref }})" >> $GITHUB_OUTPUT
        echo "head=origin/${{ github.head_ref }}" >> $GITHUB_OUTPUT
    - name: git log
      id: log
      shell: bash
      run: |
        git log --oneline ${{ steps.merge-info.outputs.head }}...${{ steps.merge-info.outputs.base }}
    - name: determine cli binary to run
      id: binary
      shell: bash
      run: |
        if [[ -e dist/cli.js ]]; then
          echo "Using local binary from dist/cli.js"
          echo "cmd=node bin/pull-request-changelog.mjs" >> $GITHUB_OUTPUT
        else
          echo "Using npx to execute binary from NPM registry"
          echo "cmd=npx -y pull-request-changelog@${{ inputs.version }}" >> $GITHUB_OUTPUT
        fi
    - name: generate changelog comment
      id: generate
      shell: bash
      run: |
        ${{ steps.binary.outputs.cmd }} \
          --from ${{ steps.merge-info.outputs.base }} \
          --to ${{ steps.merge-info.outputs.head }} \
          --config "${{ inputs.config }}" \
          --preset "${{ inputs.preset }}" \
          --template-dir "${{ inputs.template-dir }}" \
          --output "${{ inputs.filename }}"
        cat ${{ inputs.filename }}
        {
          echo 'message<<EOF'
          cat ${{ inputs.filename }}
          echo EOF
        } >> "$GITHUB_OUTPUT"
    - name: sticky pull request comment
      id: comment
      uses: marocchino/sticky-pull-request-comment@v2
      if: (inputs.comment == 'true' || inputs.comment == true)
      with:
        header: ${{ inputs.comment-id }}
        path: ${{ inputs.filename }}
